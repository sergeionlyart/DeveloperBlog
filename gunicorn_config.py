"""
Конфигурация Gunicorn для оптимизации производительности и устранения проблем с сигналами
"""

import multiprocessing
import os

# Основные настройки сервера
bind = "0.0.0.0:5000"
workers = multiprocessing.cpu_count() * 2 + 1  # Рекомендуемое количество
worker_class = "sync"  # Синхронные воркеры
timeout = 120  # Увеличенный тайм-аут для предотвращения преждевременного убийства процессов

# Предотвращение частой обработки сигналов winch
# Это наиболее важная часть для решения проблем с зависанием
ignore_winch = True  # Игнорировать сигнал WINCH

# Логирование для отладки
accesslog = "-"  # Выводить логи доступа в stdout
errorlog = "-"   # Выводить логи ошибок в stdout
loglevel = "info"

# Перезагрузка при изменении файлов
reload = True

# Улучшение стабильности
max_requests = 1000  # Перезапускать воркеры после обработки 1000 запросов
max_requests_jitter = 200  # Добавить случайность для предотвращения одновременного перезапуска
graceful_timeout = 30  # Время ожидания до принудительного завершения
keepalive = 5  # Сохранять соединение в течение 5 секунд после запроса

# Регулирование нагрузки
worker_connections = 1000  # Максимальное количество соединений на воркер

# Путь к приложению
wsgi_app = "main:app"